name: Build

on:
  push:
    branches:
      - master
#  repository_dispatch:
#    types: [build]
  workflow_dispatch:

jobs:

  buildAndUnitTest:

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            extension: ".zip"
            runtime: "win-x64"
          - os: ubuntu-latest
            extension: ".tar.gz"
            runtime: "linux-x64"
          - os: macos-latest
            runtime: "osx-x64"
            extension: ".zip"
        node_version: [12.x]
        dotnet_version: ['3.1']
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      PROJECT_NAME: 'Divergenti.Node'
      SOLUTION_PATH: 'src/Blockcore.sln'
      PROJECT_PATH: 'src/Networks/Divergenti/Divergenti.Node.csproj'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v2
      name: Checkout

    - name: Setup Node.js (12.x)
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Variables
      run: |
        echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash

    - name: Unit Test
      run: |
        dotnet nuget locals all --clear
        dotnet test -v=normal --filter "FullyQualifiedName!~IntegrationTests&Unstable!=True" -c ${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_PATH}}

    - name: Restore
      run: dotnet restore ${{env.SOLUTION_PATH}}

    - uses: actions/upload-artifact@v2
      with:
        name: Blockcore-${{env.VERSION}}-${{matrix.os}}-preview
        path: "${{github.workspace}}/package/"

    - name: Release
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo RELEASE_PATH=./src/${{env.PROJECT_NAME}}/bin/publish/${{env.RELEASE_NAME}} >> $GITHUB_ENV
        cd ./src/${{env.PROJECT_NAME}}/bin/publish/
        tar cvzf ${{env.RELEASE_NAME}} *
    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path .\src\${{env.PROJECT_NAME}}\bin\publish\* -DestinationPath .\${{env.RELEASE_NAME}}

    - name: Package (Mac)
      if: matrix.os == 'macos-latest'
      run: zip -j -r ${{env.RELEASE_NAME}} ./src/${{env.PROJECT_NAME}}/bin/publish/

    - name: Release
      uses: checho1989/action-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "${{env.RELEASE_PATH}}"
        draft: true
        prerelease: true
        body: ''
        name: "Blockcore ${{env.VERSION}}"
        tag: ${{env.VERSION}}
